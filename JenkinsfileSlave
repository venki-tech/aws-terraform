pipeline {

    agent { label 'slave'}

    stages {
        stage ('Set Variables') {
            steps {
                script {
                    env.credentialsId = "awsCredentials"
                }
            }
        }

        stage('Generate Keys') {
          steps {
            ansiColor('xterm') {
              sh 'echo -e "y\n" | ssh-keygen -t rsa -N "" -f vvkey'
            }
          }
        }

        stage('Terraform init') {
          steps {
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',credentialsId: "${env:credentialsId}",accessKeyVariable: 'AWS_ACCESS_KEY_ID',secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
            ]]) {
              ansiColor('xterm') {
                sh 'terraform init'
              }
            }
          }
        }

        stage('Terraform Plan') {
          steps {
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',credentialsId: "${env:credentialsId}",accessKeyVariable: 'AWS_ACCESS_KEY_ID',secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
            ]]) {
              ansiColor('xterm') {
                sh 'terraform plan'
              }
            }
          }
        }

        stage('Terraform Apply') {
          steps {
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',credentialsId: "${env:credentialsId}",accessKeyVariable: 'AWS_ACCESS_KEY_ID',secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
            ]]) {
              ansiColor('xterm') {
                sh 'terraform apply -auto-approve'
              }
            }
          }
        }

        stage('Ansible play') {
          steps {
            ansiColor('xterm') {
              sh 'ansible-playbook aws_pb_provision.yaml -i inventory.txt'
            }
          }
        }
    }

    post {
        success {
            echo "Success"
        }
        unstable {
            echo "Unstable"
        }
        aborted {
            echo "Aborted"
        }
        failure {
            echo "FAILURE"
        }
    }
}
